What is Kubernetes?

'Onion' --> Layers involved
'Control Mechanism'

Kubernetes: Container Orchestrator. 
    We want to make sure that the containers continue to run, 
                         if containers crash that they get restarted 
                         or we want to scale them out

What Kubernetes responsible for: 
Is everything running in the right way?
Scale out in the right way.

We are going to tell Kubernetes how we want Kubernetes to run things
We give Kubernetes like an end state we want Kubernetes to get to.

"DEFINE A DESIRED 'END STATE' LET KUBERNETES FIGURE OUT HOW TO GET THERE"

"Docker Compose": middle ground between Docker and Kubernetes. It allows run up multiple containers and network containers together. 

Docker Compose: In Development
Kubernetes: In Production

Kubernetes: K8S 

WE ARE NOT FOCUSING ON HOW KUBERNETES WORKS/COMPOSED 'UNDER THHE HOOD'.
WE ARE FOCUSING ON HOW THINGS WORK ON TOP OF KUBERNETES

Single-node cluster: we just have one 'machine'
[Cluster = Master node + Worker node(s)] master/slave architecture 

Cluster
Node
Pod - a pod is used to host and run containers (one or more containers) [In our app one pod consists one container]
[
    i) take platform service image, run it on kubernetes in a pod (we are going to do that using 'deployment')
]
Node port - (accessing containers that inside a pod) 'kubernetes service'. in test and development environment. external traffic comes into it
and it directs to internal port and through internal port we can access the container inside the pod. ['LOAD BALANCER'] 

IMPERATIVE -- COMMAND LINE
DECLARATIVE -- CONFIG FILES ** WE ARE GOING TO  TAKE THIS APPROACH -- we are gonna write deployment folder.

-- inside yaml file;
  spec:
    replicas: 1 -- we have destroyed the container within docker desktop 
                   but here we tell kubernetes one service must running
                   and kubernetes recovers the service for us 'as an orchestrator'

kubectl apply -f platforms-depl.yaml : creates deployment file

kubectl delete deployment [deployment_file] : delete deployment file -- kubernetes does not recover things after this state

we can access the service on the pod with a 'node port'

similarity for commands: 

--> kind: Service / Deployment

kubectl delete [service/deployment] etc.

command line >> kubectl get services
NAME                    TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)       
platformnpservice-srv   NodePort    10.96.240.23   <none>        80:31653/TCP   

--> TYPE:NodePort 
--> 80: internal port
--> 31653: external port